version: '3'

# TODO add depends_on to clients
services:
  gov:
    build:
      context: .
      dockerfile: ./apps/gov/Dockerfile
    restart: always
    ports:
      - 8081:80
  org:
    build:
      context: .
      dockerfile: ./apps/org/Dockerfile
    restart: always
    ports:
      - 8080:80
  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
    ports:
      - 8082:80
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - 'DATABASE_URL=${DATABASE_URL}'
        - 'API_PORT=${API_PORT}'
        - 'STORAGE_BUCKET_NAME=${STORAGE_BUCKET_NAME}'
        - 'STORAGE_ACCOUNT_ID=${STORAGE_ACCOUNT_ID}'
        - 'STORAGE_ACCESS_KEY_ID=${STORAGE_ACCESS_KEY_ID}'
        - 'STORAGE_TOKEN=${STORAGE_TOKEN}'
        - 'REDIS_URL=${REDIS_URL}'
        - 'SESSION_SECRET=${SESSION_SECRET}'
        - 'CORS_ORIGINS=${CORS_ORIGINS}'
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    environment:
      - 'DATABASE_URL=${DATABASE_URL}'
  db:
    image: postgres:alpine
    restart: always
    environment:
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_DB=${POSTGRES_DB}'
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.0.11-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
volumes:
  db-data:
  redis:
